import streamlit as st
from pymatgen.core import Structure
import py3Dmol
from pydantic import BaseModel, Field
from typing import Optional
import tempfile

class VisualizeCIF(BaseModel):
    cif_path: Optional[str] = Field(None, description="Path to the CIF file")
    cif_data: Optional[str] = Field(None, description="Raw CIF file content")

    def run(self) -> bool:
        try:
            # 优先使用文件路径，其次使用上传的数据
            if self.cif_path:
                structure = Structure.from_file(self.cif_path)
            elif self.cif_data:
                with tempfile.NamedTemporaryFile(mode="w", suffix=".cif", delete=False) as tmp:
                    tmp.write(self.cif_data)
                    tmp_path = tmp.name
                structure = Structure.from_file(tmp_path)
                os.unlink(tmp_path)  # 删除临时文件
            else:
                raise ValueError("必须提供 CIF 文件路径或直接上传文件内容")

            # 生成 XYZ 格式数据
            xyz_data = f"{len(structure)}\nGenerated by Streamlit\n"
            for site in structure:
                xyz_data += f"{site.species_string} {site.x:.4f} {site.y:.4f} {site.z:.4f}\n"

            # 用 py3Dmol 可视化
            view = py3Dmol.view(width=800, height=600)
            view.addModel(xyz_data, "xyz")
            view.setStyle({"stick": {}, "sphere": {"scale": 0.3}})
            view.zoomTo()
            
            # 在 Streamlit 中渲染
            st.components.v1.html(view._make_html(), height=600)
            return True
        except Exception as e:
            st.error(f"错误: {e}")
            return False
